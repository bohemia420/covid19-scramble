{"version":3,"sources":["AxisTop.js","RacingAxisTop.js","Bar.js","RacingBarGroup.js","RacingBarChart.js","useKeyframes.js","App.js","useWindowSize.js","serviceWorker.js","index.js","logo192.png"],"names":["AxisTop","props","domainMax","xMax","numTicks","Math","floor","xScaleForAxis","scaleLinear","domain","range","top","left","scale","tickLabelProps","textAnchor","dy","fontSize","AnimatedAxisTop","animated","RacingAxisTop","forwardRef","ref","prevDomainMax","useRef","current","springProps","useSpring","from","to","colorbar","Bar","color","x","y","width","height","name","value","deaths","round","Fragment","src","logo192","fill","style","opacity","scaleToFit","toUpperCase","AnimatedBar","RacingBarGroup","frameData","xScale","yScale","colorScale","names","filter","s","undefined","map","f","useTransition","t","includes","idx","d","initial","leave","enter","update","unique","key","item","bandwidth","interpolate","v","toFixed","RacingBarChart","React","numOfBars","margin","keyframes","onStart","onStop","useState","frameIdx","animationKey","playing","setAnimation","updateFrameRef","useEffect","setTimeout","prevFrameIdx","others","isLastFrame","length","barGroupRef","axisRef","useImperativeHandle","replay","clearTimeout","start","animation","stop","prevPlayingRef","useLayoutEffect","frame","currentDate","date","data","values","right","yMax","bottom","max","useMemo","scaleBand","Array","_","nameList","scaleOrdinal","schemeTableau10","dateInYear","toLocaleDateString","day","month","year","Group","slice","x1","y1","x2","y2","stroke","defaultProps","makeKeyframes","numOfSlice","countries","findData","dataByDateAndName","Map","forEach","dataPoint","get","nextGroup","set","e","buildFindData","nameSet","Set","dateSet","frames","sort","reduce","result","prev","next","prevTimestamp","Date","getTime","diff","i","sliceDate","sliceData","prevValue","nextDataPoint","push","a","b","useKeyframes","dataUrl","setKeyframes","axios","then","resp","csvString","nextData","csvParse","Number","row","chartMargin","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","chroma","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","animatedComponents","makeAnimated","options","label","Race","chartWidth","getSize","window","innerWidth","innerHeight","windowSize","setWindowSize","onResize","addEventListener","removeEventListener","useWindowSize","chartRef","forceUpdate","paddingTop","Button","marginLeft","onClick","variant","App","state","_onChange","bind","this","setState","console","log","divider","display","Breadcrumb","marginTop","Item","href","active","closeMenuOnSelect","components","defaultValue","isMulti","onChange","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.be9184fb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { scaleLinear } from \"@vx/scale\";\nimport { AxisTop as VxAxisTop } from \"@vx/axis\";\n\nconst AxisTop = (props) => {\n  const { domainMax, xMax } = props;\n  const numTicks = xMax > 500 ? 5 : Math.floor(xMax / 100);\n  const xScaleForAxis = scaleLinear({\n    domain: [0, domainMax],\n    range: [0, xMax]\n  });\n  return <VxAxisTop\n    top={0}\n    left={0}\n    scale={xScaleForAxis}\n    tickLabelProps={() => ({ textAnchor: 'middle', dy: '-0.25em', fontSize: 12, })}\n    numTicks={numTicks}\n  />\n}\n\nAxisTop.propTypes = {\n  domainMax: PropTypes.number.isRequired,\n  xMax: PropTypes.number.isRequired,\n};\n\nexport default AxisTop;","import React, { forwardRef, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSpring, animated } from \"react-spring\";\nimport AxisTop from \"./AxisTop\";\n\nconst AnimatedAxisTop = animated(AxisTop);\n\nconst RacingAxisTop = forwardRef(({ domainMax, xMax }, ref) => {\n  const prevDomainMaxRef = useRef(domainMax);\n  const prevDomainMax = prevDomainMaxRef.current;\n  const springProps = useSpring({\n    from: { domainMax: prevDomainMax },\n    to: { domainMax },\n    ref\n  });\n  return (\n    <AnimatedAxisTop\n      xMax={xMax}\n      {...springProps}\n    />\n  );\n});\n\nRacingAxisTop.propTypes = {\n  domainMax: PropTypes.number.isRequired,\n  xMax: PropTypes.number.isRequired,\n};\n\nexport default RacingAxisTop;","import React from \"react\";\nimport { BarGroup as VxBarGroup } from '@vx/shape';\nimport { Bar as VxBar } from \"@vx/shape\";\nimport { Text as VxText } from \"@vx/text\";\nimport logo192 from './logo192.png';\n\nconst colorbar = {\n  'China':  '#f50a0a', 'Australia' : '#755aed', 'Belgium': 'Orange',\n  'Brazil' :'#81a832', 'France': 'Blue', 'Germany' : 'Black', 'India': '#f7a54d',\n  'Iran': 'Green', 'Italy': '#d9bebd', 'Japan': '#403b39', 'Russia': 'Green',\n  'Singapore': '#4f2922', 'South Korea': 'Brown', 'Spain': '#913514',\n  'United Kingdom' : '#143891', 'United States': '#263396'\n}\n\nconst Bar = ({ color, x, y, width, height, name, value, deaths }) => {\n  const text = `${name} - cases: ${value} deaths: ${Math.round(deaths)}`;\n  return (\n    <React.Fragment>\n    <img width=\"100\" height=\"50\" src={logo192} />\n      <VxBar\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={colorbar[name]}\n        style={{ opacity: 0.8 }}\n      />\n      <VxText scaleToFit='true' scaleToFit=\"true\" x={x + 10} y={y + height / 2}>\n        {`${name.toUpperCase()} ${value} cases - ${Math.round(deaths)} deaths`}\n      </VxText>\n    </React.Fragment>\n  );\n};\n\nexport default Bar;\n","import React, { forwardRef } from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport Bar from \"./Bar\";\n\nconst AnimatedBar = animated(Bar);\n\nconst RacingBarGroup = forwardRef(({ frameData, xScale, yScale, colorScale }, ref) => {\n  frameData = frameData.filter(s=>s.name!==undefined)\n  const names = frameData.map(f=>f.name);\n  const transitions = useTransition(\n    frameData.filter(t=> names.includes(t['name'])).map(({ name, value, deaths }, idx) => ({\n      y: yScale(idx),\n      width: xScale(value),\n      value,\n      name,\n      deaths\n    })),\n    d => d.name,\n    {\n      initial: d => d,\n      from: { y: yScale.range()[1] + 50, width: 0, value: 0 },\n      leave: { y: yScale.range()[1] + 50, width: 0, value: 0 },\n      enter: d => d,\n      update: d => d,\n      unique: true,\n      ref,\n    }\n  ).filter(t=>names.includes(t.key));\n  return transitions.map(({ item, props }) => {\n    const { y, value, deaths, width } = props;\n    const { name } = item;\n    return (\n      <AnimatedBar\n        x={xScale(0)}\n        y={y}\n        width={width}\n        height={yScale.bandwidth()}\n        color={colorScale(name)}\n        value={value.interpolate(v => v.toFixed())}\n\t      deaths={deaths}\n        name={name}\n        key={name}\n      />\n    );\n  });\n});\n\nexport default RacingBarGroup;\n","import React, { useEffect, useImperativeHandle, useMemo, useRef, useState, useLayoutEffect } from \"react\";\nimport { schemeTableau10 } from \"d3-scale-chromatic\";\nimport { scaleLinear, scaleBand, scaleOrdinal } from \"@vx/scale\";\nimport { Group } from \"@vx/group\";\nimport RacingAxisTop from \"./RacingAxisTop\";\nimport RacingBarGroup from \"./RacingBarGroup\";\n\nconst RacingBarChart = React.forwardRef(({\n  numOfBars,\n  width,\n  height,\n  margin,\n  keyframes,\n  onStart,\n  onStop,\n}, ref) => {\n  const [{ frameIdx, animationKey, playing }, setAnimation] = useState({\n    frameIdx: 0,\n    animationKey: 0,\n    playing: false,\n  });\n  const updateFrameRef = useRef();\n  // when replay, increment the key to rerender the chart.\n  useEffect(() => {\n    if (!updateFrameRef.current) {\n      updateFrameRef.current = setTimeout(() => {\n        setAnimation(({ frameIdx: prevFrameIdx, playing, ...others }) => {\n          const isLastFrame = prevFrameIdx === keyframes.length - 1;\n          const nextFrameIdx = isLastFrame ? prevFrameIdx : prevFrameIdx + 1;\n          return {\n            ...others,\n            frameIdx: playing ? nextFrameIdx : prevFrameIdx,\n            playing: !!(playing && !isLastFrame),\n          }\n        });\n        updateFrameRef.current = null;\n      }, 250);\n    }\n  });\n  const barGroupRef = useRef();\n  const axisRef = useRef();\n  useImperativeHandle(ref, () => ({\n    replay: () => {\n      clearTimeout(updateFrameRef.current);\n      updateFrameRef.current = null;\n      setAnimation(({ animationKey, ...others }) => ({\n        ...others,\n        frameIdx: 0,\n        animationKey: animationKey + 1,\n        playing: true,\n      }));\n    },\n    start: () => {\n      setAnimation(animation => ({\n        ...animation,\n        playing: true,\n      }));\n    },\n    stop: () => {\n      setAnimation(animation => ({\n        ...animation,\n        playing: false,\n      }));\n      barGroupRef.current.stop();\n      axisRef.current.stop();\n    },\n    playing,\n  }));\n  const prevPlayingRef = useRef(playing);\n  useEffect(() => {\n    if (prevPlayingRef.current !== playing) {\n      if (playing) {\n        onStart();\n      } else {\n        onStop();\n      }\n    }\n    prevPlayingRef.current = playing;\n  }, [playing]);\n  useLayoutEffect(() => {\n    if (barGroupRef.current) {\n      if (playing) {\n        barGroupRef.current.start();\n        axisRef.current.start();\n      }\n    }\n  });\n  const frame = keyframes[frameIdx];\n  const { date: currentDate, data: frameData } = frame;\n  const values = frameData.map(({ value }) => value);\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n  const domainMax = Math.max(...values);\n  const xScale = scaleLinear({\n    domain: [0, domainMax],\n    range: [0, xMax]\n  });\n  const yScale = useMemo(\n    () =>\n      scaleBand({\n        domain: Array(numOfBars)\n          .fill(0)\n          .map((_, idx) => idx),\n        range: [0, yMax]\n      }),\n    [numOfBars, yMax]\n  );\n  const nameList = useMemo(\n    () => {\n      if (keyframes.length === 0) {\n        return []\n      }\n      return keyframes[0].data.map(d => d.name);\n    },\n    [keyframes]\n  );\n  const colorScale = useMemo(\n    () =>\n      scaleOrdinal(schemeTableau10)\n        .domain(nameList)\n        .range(schemeTableau10),\n    [nameList]\n  );\n  //const dateInYear = currentDate.getFullYear();\n  const dateInYear = currentDate.toLocaleDateString('en-DB',{day:'numeric',month:'short',year:'numeric'});\n  return (\n    <svg width={width} height={height}>\n      <Group top={margin.top} left={margin.left} key={animationKey}>\n        <RacingBarGroup\n          frameData={frameData.slice(0, numOfBars)}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={colorScale}\n          ref={barGroupRef}\n        />\n        <text\n          textAnchor=\"end\"\n          style={{ fontSize: \"1.25em\" }}\n          x={xMax}\n          y={yMax}\n        >\n          {dateInYear}\n        </text>\n        <line\n          x1={0}\n          y1={0}\n          x2={0}\n          y2={yMax}\n          stroke=\"black\"\n        />\n        <RacingAxisTop\n          domainMax={domainMax}\n          xMax={xMax}\n          ref={axisRef}\n        />\n      </Group>\n    </svg>\n  );\n});\n\nRacingBarChart.defaultProps = {\n  width: 600,\n  height: 450,\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 100\n  },\n};\n\nexport default RacingBarChart;\n","import React from \"react\";\nimport axios from \"axios\";\nimport csvParse from \"csv-parse/lib/sync\";\n\nconst buildFindData = data => {\n  const dataByDateAndName = new Map();\n  data.forEach(dataPoint => {\n    const { date, name } = dataPoint;\n    if (!dataByDateAndName.get(date)) {\n      dataByDateAndName.set(date, { [name]: dataPoint });\n    } else {\n      const nextGroup = {\n        ...dataByDateAndName.get(date),\n        [name]: dataPoint\n      };\n      dataByDateAndName.set(date, nextGroup);\n    }\n  });\n  const finder = ({ date, name }) => {\n    try {\n      return dataByDateAndName.get(date)[name];\n    } catch (e) {\n      return null;\n    }\n  };\n  return finder;\n}\n\nconst makeKeyframes = (data, numOfSlice, countries) => {\n  /**\n   * Assume data is an array of { date: string, name: string, value: number, ...others }.\n   * This function return an array of keyframe, each keyframe is { date: Date, data: { name: string, value: number, ...others }[] }.\n   * At first we will collect all of the name appearing in the original data.\n   * The `data` field of keyframe is descending sorted by `value` field.\n   */\n  const findData = buildFindData(data);\n  const nameSet = new Set(data.map(({ name }) => name));\n  const nameList = [...nameSet];\n  const dateSet = new Set(data.map(({ date }) => date));\n  const dateList = [...dateSet];\n\n  const frames = dateList.sort().map(date => ({\n    date,\n    data: nameList.map(name => {\n      const dataPoint = findData({ date, name });\n      return {\n        ...dataPoint,\n        value: dataPoint ? dataPoint.value : 0,\n      };\n    })\n  }));\n  const keyframes = frames\n    .reduce((result, frame, idx) => {\n      const prev = frame;\n      const next = idx !== frames.length - 1 ? frames[idx + 1] : null;\n      if (!next) {\n        result.push({ ...frame, date: new Date(frame.date) });\n      } else {\n        const prevTimestamp = new Date(prev.date).getTime();\n        const nextTimestamp = new Date(next.date).getTime();\n        const diff = nextTimestamp - prevTimestamp;\n        for (let i = 0; i < numOfSlice; i++) {\n          const sliceDate = new Date(prevTimestamp + diff * i / numOfSlice);\n          const sliceData = frame.data.map(({ name, value, ...others }) => {\n            const prevValue = value;\n            const nextDataPoint = findData({ date: next.date, name });\n            const nextValue = nextDataPoint ? nextDataPoint.value : 0;\n            const sliceValue =\n              prevValue + (nextValue - prevValue) * i / numOfSlice;\n            return {\n              name,\n              value: sliceValue,\n              ...others\n            };\n          });\n          result.push({\n            date: sliceDate,\n            data: sliceData\n          });\n        }\n      }\n      return result;\n    }, [])\n    .map(({ date, data }) => {\n      return {\n        date,\n        data: data.sort((a, b) => b.value - a.value)\n      };\n    });\n  return keyframes;\n};\n\nfunction useKeyframes(dataUrl, numOfSlice, countries) {\n  const [keyframes, setKeyframes] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(dataUrl).then(resp => {\n      const { data: csvString } = resp;\n      const nextData = csvParse(csvString)\n        .slice(1)\n        .map(([date, name, value, deaths]) => ({\n          date,\n          name,\n          deaths: Number(deaths),\n          value: Number(value)\n        })).filter(function(row) {return countries.includes(row['name'])});\n      const keyframes = makeKeyframes(nextData, numOfSlice);\n      setKeyframes(keyframes);\n    });\n  }, [dataUrl, numOfSlice, countries]);\n  return keyframes;\n}\n\nexport default useKeyframes;\n","import React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport chroma from 'chroma-js';\nimport Button from 'react-bootstrap/Button';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\n\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nimport RacingBarChart from \"./RacingBarChart\";\nimport useKeyframes from \"./useKeyframes\";\nimport useWindowSize from \"./useWindowSize\";\n\nconst dataUrl = \"/data/corona-journey.csv\";\nconst numOfBars = 12;\nconst numOfSlice = 15;\nconst chartMargin = {\n  top: 30,\n  right: 10,\n  bottom: 30,\n  left: 10,\n};\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n      },\n    };\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css(),\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n    ':hover': {\n      backgroundColor: data.color,\n      color: 'white',\n    },\n  }),\n};\n\nconst animatedComponents = makeAnimated();\n\nconst options = [\n  { value: 'China', label: 'China', color: 'Red' },\n  { value: 'Australia', label: 'Australia', color: 'Purple'},\n  { value: 'Belgium', label: 'Belgium', color: 'Orange'},\n  { value: 'Brazil', label: 'Brazil', color: '#81a832'},\n  { value: 'France', label: 'France', color: 'Blue'},\n  { value: 'Germany', label: 'Germany', color: 'Black'},\n  { value: 'India', label: 'India', color: '#f7a54d'},\n  { value: 'Iran', label: 'Iran', color: 'Green'},\n  { value: 'Italy', label: 'Italy', color: 'Red'},\n  { value: 'Japan', label: 'Japan', color: 'Black'},\n  { value: 'Russia', label: 'Russia', color: 'Green'},\n  { value: 'Singapore', label: 'Singapore', color: 'Brown'},\n  { value: 'South Korea', label: 'South Korea', color: 'Brown'},\n  { value: 'Spain', label: 'Spain', color: 'Red'},\n  { value: 'United Kingdom', label: 'United Kingdom', color: 'Purple'},\n  { value: 'United States', label: 'United States', color: '#263396'},\n]\n\nfunction Race(props) {\n  const { width: windowWidth } = useWindowSize();\n  const chartWidth = windowWidth - 64; const chartHeight = 560;\n  const keyframes = useKeyframes(dataUrl, numOfSlice, props.countries); const chartRef = React.useRef();\n  const handleReplay = () => {\n    chartRef.current.replay();\n  }\n  const handleStart = () => {\n    chartRef.current.start();\n  }\n  const handleStop = () => {\n    chartRef.current.stop();\n  }\n  const playing = chartRef.current ? chartRef.current.playing : false; const [_, forceUpdate] = useState(); \n  return (  \n    <div style={{ paddingTop: \"1em\" }}>\n      <Button style={{ marginLeft: '10px' }} onClick={handleReplay} variant=\"success\">replay</Button>{' '}\n      <Button variant=\"secondary\" onClick={playing ? handleStop : handleStart}>\n        { playing ? 'stop' : 'start' }\n      </Button>\n      {keyframes.length > 0 && (\n        <RacingBarChart\n          keyframes={keyframes}\n          numOfBars={numOfBars}\n          width={chartWidth}\n          height={chartHeight}\n          margin={chartMargin}\n          onStart={() => forceUpdate(true)}\n          onStop={() => forceUpdate(false)}\n          ref={chartRef}\n        />\n      )}\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries:  [\"China\",\"Belgium\",\"Brazil\",\"France\",\"Germany\",\"India\",\"Iran\",\"Italy\",\"Japan\",\"South Korea\",\"United Kingdom\",\"United States\"],\n    }\n    this._onChange = this._onChange.bind(this);\n  }\n\n  _onChange(value) {\n    this.setState({countries: value.map(s=>s.value)},() => console.log(this.state.countries),)\n  }\n\n  render() {\n    const { countries } = this.state\n    const divider = <span style={{ display: 'inline-block', margin: '10px' }} />\n    return (\n      <>\n      <Breadcrumb style= {{ marginTop:\"10px\" }}>\n      <Breadcrumb.Item href=\"#\">Select</Breadcrumb.Item>\n      <Breadcrumb.Item href=\"#\">\n        Replay\n      </Breadcrumb.Item>\n      <Breadcrumb.Item active> Stop -> Start </Breadcrumb.Item>\n    </Breadcrumb>\n      <Select style= {{ marginLeft:\"10px\" }}\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={[options[0], options[2], options[3], options[4], options[5], options[6], options[7], options[8], options[9], options[12], options[14], options[15]]}\n        isMulti\n        options={options}\n        styles={colourStyles}\n        onChange={this._onChange}\n      />\n      { divider }\n      <Race countries={this.state.countries} />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\n\nexport default function useWindowSize() {\n  const getSize = () => ({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const [windowSize, setWindowSize] = React.useState(getSize);\n  React.useEffect(() => {\n    const onResize = () => {\n      setWindowSize(getSize);\n    };\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n  return windowSize\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo192.51a8486a.png\";"],"sourceRoot":""}